3.在css/js的代码上线后开发人员经常会优化性能，从用户刷新网页开始，一次js请求一般情况下有哪些地方会有缓存处理？

dns缓存、cdn缓存、浏览器缓存、服务器缓存。

附：缓存介绍

DNS（Domain Name System/域名解析系统）： 短时间内多次访问某个网址，系统会设计一个本地“dns缓存”，当第一次访问baidu.com，dns返回了正确的ip后，系统就会将这个结果临时储存起来，这就是dns缓存。它会有一个失效时间，在这时间内，当再次访问时，系统会从电脑本地的dns缓存中把结果交还给你，而不必再去询问dns服务器，变相“加速”了网址的解析。

CDN（Content Delivery Network/内容分发网络）： 通过在不同的地点缓存内容，然后通过负载平衡等技术将用户请求定向到最近的缓存服务器上获取内容，提高用户访问网站的响应速度。

浏览器缓存： 为了节约网络资源的加速浏览器，浏览器在用户磁盘上对最近请求过的文档进行存储，当访问这再次请求这个页面时，浏览器可以从本地磁盘显示文档，这样就可以加速页面的阅读。

web服务器缓存： web缓存服务器的应用模式主要是正向代理和反向代理。正向代理（Proxy）模式是代理网络用户访问internet，客户端将本来要直接发送到internet上源服务器的连接请求发送给代理服务器处理。正向代理的目的是加速用户在使用浏览器访问Internet时的响应时间，并提高广域网线路的利用率。正向代理浏览器无需和该站点建立联系，只访问到Web缓存即可。通过正向代理，大大提高了后续用户的访问速度，使他们无需再穿越Internet，只要从本地Web缓存就可以获取所需要的信息，避免了带宽问题，同时可以大量减少重复请求在网络上的传输，从而降低网络流量，节省资费。

反向代理(Reverse Proxy)模式是针对Web服务器加速功能的，在该模式中，缓存服务器放置在web应用服务器的前面，当用户访问web应用服务器的时候，首先经过缓存服务器，并将用户的请求和应用服务器应答的内容写入缓存服务器中，从而为后续用户的访问提供更快的响应。