性能: 1.网络性能 吞吐量 负载 可用带宽   
      保存回话，
      2.网络效率
      3.完成时间 
      4.延迟

可修改性: 可进化性  可扩展性  可配置性 可定质行  可重用性







 架构实例:
       数据流风格: 所有的数据按照流的形式在执行过程中前进，不存在结构的反复和重构。     



按需代码:是什么 ? 是客户端需要处理数据，但是不知道如何处理，需要从服务器端，下载处理数据的代码，
                 同时可以下载不同的处理数据的方式
                 基于这些:可配置型（在部署之后，组件或者组件的可更改的能力）
                 网络性能增加了很多  （速度快 c）同时增加网络性能的还有很多风格（cache，远程求值，按需代码）





分层风格: mvc 可进化性是最为主要的
        客户 - 服务器  分离关注点 增加了可进化型 (前后端可以自由的发布版本)
        分层系统: 降低了可察觉性  进化型























分层:  客户 -服务器 分离关注点 提供了一组服务，同时监控了这组服务 分离了关注点
      分层系统
      分层系统 客户 -服务器
      客户 - 无状态 -服务器
      客户缓存-无状态 服务器
      分层 客户缓存  无状态  服务器
      远程回话
      远程数据访问

















